const { admin, db } = require('./admin');

/**
 *                      [Middleware Authentication]
 * *******************************************************************************
 * usage: authorize the user - check if this user is authorized and has token, 
 *        also check that this token was generated by our system (firebase) or not.
 */

module.exports = (req, res, next) => {
    let idToken;
    if (
        req.headers.authorization &&
        req.headers.authorization.startsWith('Bearer ')
    ) {
        // authorization: 'Bearer {user_token}'
        idToken = req.headers.authorization.split('Bearer ')[1];
    } else {
        console.error('No token found');
        return res.status(403).json({
            error: 'Unauthorized'
        });
    }

    // verify that the token was generated by our system (firebase)
    admin
        .auth()
        .verifyIdToken(idToken)
        .then((decodedToken) => {
            req.user = decodedToken;
            return db
                .collection('users')
                .where('userId', '==', req.user.uid)
                .limit(1)
                .get();
        })
        .then((data) => {
            // this data will be accessible across whole project, in each time sending request to server
            req.user.userName = data.docs[0].data().userName;
            req.user.profilePicture = data.docs[0].data().profilePicture;
            return next();
        })
        .catch((err) => {
            console.error('Error while verifying token ', err);
            return res.status(403).json(err);
        });
}